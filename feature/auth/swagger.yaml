openapi: 3.0.0
info:
  description: "Auth service"
  version: "1.0.0"
  title: "Auth service"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "alxminyaev@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# host: "0.0.0.0"
# basePath: "/auth"

servers:
  - url: "http://localhost/auth"
  - url: "http://5.130.14.37:8080/auth"

tags:
  - name: "Login"
    description: "Вид мероприятия"
    externalDocs:
      description: "Find out more"
      url: "shorturl.at/bjwU5"
  - name: "Token"
    description: ""
    externalDocs:
      description: "Find out more"
      url: ""



paths:
  /api/v1/token/refresh:
    post:
      tags:
        - "Token"
      summary: "Method for update access token by refresh token"
      description: ""
      operationId: "postRefreshToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenPostRequest'
      responses:
        "200":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessKeysResponse"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - "Token"
      summary: "Method for update access token by refresh token (from cookies)"
      description: ""
      operationId: "getRefreshToken"
      responses:
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/login:
    post:
      tags:
        - "Login"
      summary: ""
      description: ""
      operationId: "login"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessKeysResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


components:
  schemas:

    LoginPostRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string


    AccessKeysResponse:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    RefreshTokenPostRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        field:
          type: "string"
        message:
          type: "string"


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"